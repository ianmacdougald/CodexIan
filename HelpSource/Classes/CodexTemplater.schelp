TITLE::CodexTemplater
summary::Generator of .scd files from templates of code
categories::Libraries>Codices
related::Classes/CodexIncrementer, Overviews/Codices
keyword::codices, codex, templates, template, templater

DESCRIPTION::
CodexTemplater creates teletype::.scd:: files with code templates for the following classes:

list::
## link::Classes/SynthDef::
## link::Classes/Pattern::
## link::Classes/Function::
## link::Classes/Synth::
## link::Classes/Event::
## link::Classes/Array::
## link::Classes/List::
## link::Classes/Buffer::
::

If a situation arises in which templates are needed from other objects or even combinations of objects, CodexTemplater can be easily link::#Extending CodexTemplater#extended::.

CodexTemplater was originally designed to operate inside link::Classes/Codex::. To see how this works,  refer to this link::Guides/Codices##guide::.
CLASSMETHODS::

method::new
Creates a new instance of CodexTemplater.

argument::folder
A string pointing to a directory where templates will be generated.

private::modulePathString
private::moduleTemplateDir
private::makeTemplate
private::copyFile
private::firstToLower
private::targetCopy
private::templateDir
private::defaultPath

INSTANCEMETHODS::
method::makeTemplate
Copies the file at the source to link::Classes/CodexTemplater#-folder::.
argument::templateName
The new name of the file that will be copied.
argument::sourcePath
A string pointing to a preexisting .scd file.
private::setTemplateDir
private::resetTemplateDir

method::folder
Gets and sets a string pointing to where templates will be generated.

subsection::Templating methods
method::synthDef
Creates a template for a SynthDef object.

method::pattern
Creates a template for a Pattern object.

method::function
Creates a template for a Function object.

method::synth
Creates a template for a Synth object.

method::event
Creates a template for an Event object.

method::array
Creates a template for an Array object.

method::list
Creates a template for a List object.

method::buffer
Creates a template for a Buffer object.

method::blank
Creates an empty teletype::.scd:: file

EXAMPLES::

code::
(
var path, templater;

//1. Set up a path.
path = "~/Desktop/_templateTest".standardizePath.mkdir;

//2. Load the path into a CodexTemplater.
templater = CodexTemplater.new(path);

//3. Make templates for SynthDef.
templater.synthDef;
templater.synthDef("anotherSynthDef");

//4. Make templates for Function.
templater.function;
templater.function("anotherFunction");

//5. Inspect the file names.
//(Look at and delete the folder from the desktop too.)
PathName(path).files.do{|item|
	item.fileName.postln;
};
)

//6. Clean up.
File.deleteAll("~/Desktop/_templateTest".standardizePath);
::

If one tries to make a template at a location where a template with the same name already exists, the class automatically link::Classes/CodexIncrementer##increments:: the name starting with 1.
code::
(
var path, templater;

//1. Set up a path.
path = "~/Desktop/_secondTemplateTest".standardizePath.mkdir;

//2. Load the path into a CodexTemplater.
templater = CodexTemplater.new(path);

//3. Make templates of a Patttern.
templater.pattern("dupTest");
templater.pattern("dupTest");
templater.pattern("dupTest");

//4. Inspect the file names.
PathName(path).files.do{|item|
	item.fileName.postln;
};
)

//5. Clean up.
File.deleteAll("~/Desktop/_secondTemplateTest".standardizePath);
::

anchor::ExtendingCodexTemplater::
section::Extending CodexTemplater
Because the method link::Classes/CodexTemplater#-makeTemplate#-makeTemplate:: simply copies a file from one place to another, CodexTemplater can easily be made to template arbitrary SuperCollider code. To incorporate a new template into the CodexTemplater interface, just extend it like so:

code::
+ CodexTemplater {
	customTemplate { | templateName("custom") |
		this.makeTemplate(templateName, "/Some/Folder/customTemplate.scd")
	}
}
::
