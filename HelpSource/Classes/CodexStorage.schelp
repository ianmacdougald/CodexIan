TITLE::CodexStorage
summary::Interface for persistent storage of data
categories::Libraries>Codices
related::Classes/CodexIncrementer
keyword::persistent, codexian, codexian path, utilities, codexian utilities
DESCRIPTION::

CodexStorage is used for managing paths to files or folders using persistent storage. As a result, information stored through the class's interface will persist across sessions of the link::Classes/Interpreter::.

CLASSMETHODS::

method::at
Gets the path stored at the key symbol.
argument::key
A symbol.

method::add
Sets the path stored at the key symbol.

method::removeAt
Removes the path at the symbol key from storage.
argument::key
A symbol.

method::keys
Gets the set of keys at which paths are stored.

private::defaultPath
private::checkDictionary
private::parse
private::pathToQuark
private::stroagePath
private::write
private::storagePath
private::getDictionary

EXAMPLES::
code::
//Set a path using the key \test.
CodexStorage.add(\test -> "~/Example/Path".standardizePath);

//Get the path from the same key.
CodexStorage.at(\test).postln;

//If you want...reboot the interpreter (wiping SC's memory) and try again.
//The path should have persisted.
CodexStorage.at(\test).postln;

//Add a new key.
CodexStorage.add(\test2 -> "~/New/Path".standardizePath);

//Get the keys associated with the paths stored.
CodexStorage.keys.postln;

//Remove the test paths from storage.
CodexStorage.removeAt(\test);
CodexStorage.removeAt(\test2);

//See, they're gone!
CodexStorage.keys.postln;

//Test.
CodexStorage.at(\test);
CodexStorage.at(\test2);
::

CodexStorage can also be made to work with strings, prepending its items to quickly return common addresses in the style of link::Classes/String#-standardizePath#:: using pseudo-method lookups similar to link::Classes/IdentityDictionary#-know#IdentityDictionary::.
code::
//Enable the use of CodexStorage data with strings.
//This configuration will persist across interpreter sessions.
String.codexKnow = true;

(
//Store a path using an empty string and a unique pseudo-method name.
if(String.codexKnow){
    "".foobar = "~/Desktop".standardizePath;
};
)

//Use this pseudo-method to quickly prepend its path with other strings.
"hello_world.wav".foobar;

//Stop this behavior by changing the flag set through the String class.
String.codexKnow = false;
"hello_world.wav".foobar;
::
